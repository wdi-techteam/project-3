{"version":3,"sources":["GitHub_Logo.png","email.png","Result.js","api.js","Converter.js","footer.js","Calender.js","NavBar.js","About.js","Support.js","Currencies.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Result","state","liveRate","_this2","this","axios","method","url","concat","props","from","to","then","response","setState","data","quotes","catch","error","console","log","showData","react_default","a","createElement","Fragment","className","amount","output","toFixed","id","rate","valign","Component","getResult","Converter","invert","formData","result","toResult","handleChange","event","userInput","target","value","inputName","name","formDataCopy","Object","assign","_this","handleSubmit","preventDefault","temp","swapOptions","onSubmit","type","min","pattern","onChange","currencies","map","currency","key","currencyName","selected","onClick","src_Result_0","Footer","Calender","tempDate","Date","date","getFullYear","getMonth","getDate","Navbar","react_router_dom","src_Calender","About","Support","href","src","mail","alt","height","github","Currencies","promises","getFlags","Promise","all","promise","e","values","filter","Error","err","code","class","flag","width","symbol","App","currancyData","currencyKey","results","push","sort","b","nameA","toUpperCase","nameB","_this3","NavBar","react_router","exact","path","render","src_Converter_0","src_Currencies_0","component","footer","Boolean","window","location","hostname","match","AppJsx","src_App_0","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.289edd65.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/GitHub_Logo.cefc2023.png\";","module.exports = __webpack_public_path__ + \"static/media/email.c4bd9291.png\";","import React, { Component } from \"react\";\r\nimport axios from \"axios\";\r\nimport \"./Result.css\"\r\n\r\nclass Result extends Component {\r\n  state = {\r\n    liveRate: []\r\n  }\r\n  componentDidMount() {\r\n    axios({\r\n      method: \"get\",\r\n      url: `http://apilayer.net/api/live?access_key=2d6e17532c89b2561cff864a5c13579a&currencies=${this.props.from},${this.props.to},EUR,GBP,CAD,AUD,SAR,AED&source=USD&format=1`\r\n    })\r\n      .then(response => {\r\n\r\n        this.setState({\r\n          liveRate: response.data.quotes\r\n        });\r\n        // console.log(this.state.liveRate)\r\n      })\r\n\r\n      .catch(error => {\r\n        console.log(\"Request failed\");\r\n      });\r\n\r\n  }\r\n  render() {\r\n    const showData = (\r\n      <React.Fragment>\r\n\r\n        <h2 className='result'>\r\n          {this.props.amount} {this.props.from} = {this.props.output.toFixed(3)}{\" \"} {this.props.to}\r\n        </h2>\r\n        <p id='rate'> 1 {this.props.from}  = {this.props.rate} {this.props.to} </p>\r\n\r\n        <div >\r\n          <h2 className='center'>Live Currency Rates</h2>\r\n          <div className='table'>\r\n            {/* <h2 className='center'>Live Currency Rates</h2> */}\r\n            <table>\r\n              <tr>\r\n                <td valign=\"top\"><table id=\"t01\" >\r\n                  <tr>\r\n                    <th>Currency</th>\r\n                    <th>Rate</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD /  {this.props.from}</td>\r\n                    <td>{this.state.liveRate['USD' + this.props.from]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD /  {this.props.to}</td>\r\n                    <td>{this.state.liveRate['USD' + this.props.to]}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / EUR</td>\r\n                    <td>{this.state.liveRate['USDEUR']}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / GBP</td>\r\n                    <td>{this.state.liveRate['USDGBP']}</td>\r\n                  </tr>\r\n                </table>\r\n                </td>\r\n                <td valign=\"top\"><table id=\"t01\">\r\n                  <tr>\r\n                    <th>Currency</th>\r\n                    <th>Rate</th>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / CAD</td>\r\n                    <td>{this.state.liveRate['USDCAD']}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / AUD</td>\r\n                    <td>{this.state.liveRate['USDAUD']}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / SAR</td>\r\n                    <td>{this.state.liveRate['USDSAR']}</td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td>USD / AED</td>\r\n                    <td>{this.state.liveRate['USDAED']}</td>\r\n                  </tr>\r\n                </table>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </div>\r\n        </div>\r\n\r\n      </React.Fragment>\r\n    );\r\n    return <div>{showData}</div>;\r\n  }\r\n}\r\nexport default Result;\r\n","import axios from \"axios\";\r\n\r\nexport const getResult = (from, to) => {\r\n  return axios({\r\n    method: \"get\",\r\n    url: `https://free.currconv.com/api/v7/convert?q=${from}_${to}&compact=ultra&apiKey=c88d0484f970be819447`\r\n    // amany's key= de16d9c21e2609ca2315\r\n    // wijdan's key= 80017b5a4cbbbc532a33\r\n    // maha's key= c88d0484f970be819447\r\n    // taha's Key= 25b9fc364d1f0bdff9c3\r\n  });\r\n};\r\n\r\n\r\nexport const getFlags = (currency) => {\r\n  return axios({\r\n    method: \"get\",\r\n    url: `https://restcountries.eu/rest/v2/currency/${currency}`\r\n  })\r\n\r\n};\r\n","import React, { Component } from \"react\";\r\n// import axios from \"axios\";\r\nimport Result from \"./Result\";\r\nimport { getResult } from \"./api\";\r\nimport \"./Converter.css\";\r\n\r\n\r\nclass Converter extends Component {\r\n  state = {\r\n    invert: false,\r\n    formData: {\r\n      //to get user input\r\n      from: \"\",\r\n      to: \"\",\r\n      amount: 0,\r\n      rate: 0,\r\n      result: 0,\r\n      toResult: false\r\n    }\r\n  }\r\n\r\n  handleChange = event => {\r\n    console.log(\"change\");\r\n    // get the users input\r\n\r\n    const userInput = event.target.value;\r\n    // get which input they typed in\r\n    const inputName = event.target.name;\r\n    // copy the state of formData\r\n    const formDataCopy = Object.assign(this.state.formData);\r\n    // update the key in formData copy with the new value\r\n    formDataCopy[inputName] = userInput;\r\n    // set the state with the updated formData\r\n    this.setState({ formData: formDataCopy });\r\n  }\r\n\r\n  handleSubmit = event => {\r\n    // prevent default action\r\n    event.preventDefault();\r\n\r\n    let from = this.state.formData.from;\r\n    let to = this.state.formData.to;\r\n    if (this.state.invert) {\r\n      let temp = \"\";\r\n      temp = from;\r\n      from = to;\r\n      to = temp;\r\n      this.setState({\r\n        invert: false,\r\n      })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n    getResult(from, to)\r\n      .then(response => {\r\n        const rate = `${from}_${to}`; //get the rate from api\r\n        this.setState({\r\n          formData: {\r\n            from: from,\r\n            to: to,\r\n            amount: this.state.formData.amount,\r\n            rate: response.data[rate],\r\n            result: response.data[rate] * this.state.formData.amount,\r\n            toResult: true\r\n          }\r\n        });\r\n      })\r\n  }\r\n  swapOptions = () => {\r\n    this.setState({\r\n      invert: true,\r\n    })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"currancyForm\">\r\n        <form onSubmit={this.handleSubmit}>\r\n          <label> Amount </label>\r\n          <input\r\n            type=\"number\"\r\n            name=\"amount\"\r\n            min=\"0\"\r\n            pattern=\"[0-9]\"\r\n            value={this.state.formData.amount}\r\n            onChange={this.handleChange}\r\n          />\r\n          {/* <label> From </label> */}\r\n          <select id=\"idF\"\r\n            className=\"select-items\"\r\n            onChange={this.handleChange}\r\n            name=\"from\"\r\n          >\r\n            <option value=\"\">- Convert from -</option>\r\n            {this.props.currencies.map(currency => (\r\n              <option name='from' key={currency.id} value={currency.id} >\r\n                {currency.id} - {currency.currencyName}\r\n              </option>\r\n\r\n            ))}\r\n            {this.state.invert ? <option selected >{this.state.formData.to}</option> : \"\"}\r\n          </select>\r\n          <button className=\"submitButton\" id=\"invert\" onClick={this.swapOptions}> {\"<>\"} </button>\r\n          {/* <label> To </label> */}\r\n          <select\r\n            className=\"select-items\"\r\n            onChange={this.handleChange}\r\n            name=\"to\"\r\n          >\r\n            <option value=\"\">- Convert to -</option>\r\n            {this.props.currencies.map(currency => (\r\n              <option name='to' key={currency.id} value={currency.id}>\r\n                {currency.id} - {currency.currencyName}\r\n              </option>\r\n            ))}\r\n            {this.state.invert ? <option selected >{this.state.formData.from}</option> : \"\"}\r\n          </select>\r\n          {/* {console.log(t.options[t.selectedIndex].text)} */}\r\n          <button className=\"submitButton\" type=\"submit\">\r\n            {\" \"}\r\n            >{\" \"}\r\n          </button>\r\n        </form>\r\n        {this.state.formData.toResult ? (\r\n          <Result\r\n            output={this.state.formData.result}\r\n            amount={this.state.formData.amount}\r\n            from={this.state.formData.from}\r\n            to={this.state.formData.to}\r\n            toResult={this.state.toResult}\r\n            rate={this.state.formData.rate}\r\n          />\r\n        ) : (\r\n            \"\"\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Converter;\r\n","import React from \"react\";\r\n// import \"./footer.css\";\r\nconst Footer = () => (\r\n  <footer>\r\n    <p className=\"copyright\">\r\n      &copy; 2019 Created with &hearts; by\r\n      <span> Tech-Team</span>\r\n    </p>\r\n  </footer>\r\n);\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n\r\nfunction Calender() {\r\n  let tempDate = new Date();\r\n  let date = tempDate.getFullYear() + '-' + (tempDate.getMonth() + 1) + '-' + tempDate.getDate()\r\n\r\n  return (\r\n\r\n    <span className=\"Cal\">{date}</span>\r\n\r\n  );\r\n}\r\nexport default Calender;","import React from \"react\";\r\nimport Calender from \"./Calender\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n\r\nconst Navbar = props => (\r\n  <header>\r\n    <nav>\r\n\r\n      <div className=\"Home\"> <span className=\"title\">Currancy Exchange</span><Link to=\"/\">Home</Link>   <Link to=\"/about\">About</Link> <Link to=\"/currencies\">Currencies</Link> <Link to=\"/support\">Support</Link>\r\n        <Calender /></div>\r\n    </nav>\r\n  </header>\r\n);\r\n\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\nconst About = () => (\r\n  <div>\r\n\r\n    <h1 className=\"about\"> About </h1>\r\n    <p className=\"this-app\">\r\n\r\n\r\n      This app give you the power of our most up to date, reputable currency\r\n      information and offer you secure, reliable, easy to use products and\r\n      services dedicated to making your life easier.Its main function is\r\n      in the conversion of international and international currencies among them,\r\n      in addition to the existence of complete information on all its currencies.\r\n    </p>\r\n  </div>\r\n);\r\n\r\nexport default About;\r\n","import React from \"react\";\r\nimport github from './GitHub_Logo.png'\r\nimport mail from './email.png'\r\n\r\nconst Support = () => (\r\n\r\n      <div>\r\n            <h1 className=\"about\"> Support </h1>\r\n\r\n            <p className=\"we\">\r\n                  We have a strong commitment to providing quality support,\r\n                  Please if you want to contact us:\r\n\r\n                  <ul>\r\n                        <li><span>Mr. Taha:<br /><a href=\"mailto:taha.sindi@gmail.com\"> <img src={mail} alt=\"github logo\" height='30px' /></a>\r\n                              <a href=\"https://github.com/taha-sindi\"><img className=\"git\" src={github} alt=\"github logo\" height='30px' /></a> </span> </li><br />\r\n\r\n                        <li><span>Ms. Wijdan:<br /><a href=\"mailto:Wijdan.w.k@outlook.sa\"> <img className=\"mail\" src={mail} alt=\"github logo\" height='30px' /></a>\r\n                              <a href=\"https://github.com/wijdan1995\"><img className=\"git\" src={github} alt=\"github logo\" height='30px' /></a>  </span></li><br />\r\n\r\n\r\n                        <li><span>Ms. Amany:<br /><a href=\"mailto:amanyalattass@gmail.com\"> <img src={mail} alt=\"github logo\" height='30px' /></a>\r\n                              <a href=\"https://github.com/AmanyAts\"><img className=\"git\" src={github} alt=\"github logo\" height='30px' /></a>  </span></li><br />\r\n\r\n                        <li><span>Ms. Maha:<br /> <a href=\"mailto:maha-ahmad@live.com\"> <img src={mail} alt=\"github logo\" height='30px' /></a>\r\n                              <a href=\"https://github.com/MahaKarban\"><img className=\"git\" src={github} alt=\"github logo\" height='30px' /></a></span>\r\n                        </li>\r\n\r\n                  </ul>\r\n            </p>\r\n      </div>);\r\n\r\nexport default Support;","import React, { Component } from \"react\";\r\nimport \"./Currencies.css\";\r\nimport { getFlags } from \"./api\";\r\n\r\nclass Currencies extends Component {\r\n  state = {\r\n    currencies: []\r\n  }\r\n  componentDidMount() {\r\n    console.log(this.props.currencies)\r\n    let promises = this.props.currencies.map(currency => {\r\n      return getFlags(currency.id)\r\n    })\r\n\r\n    Promise.all(promises.map(promise => promise.catch(e => e)))\r\n      .then((values) => {\r\n\r\n        const currencies = values.filter(result => !(result instanceof Error))\r\n        console.log(currencies)\r\n        this.setState({\r\n          currencies: currencies.map(currency => currency.data[0])\r\n        })\r\n      })\r\n      .catch(err => console.log(err))\r\n  }\r\n  render() {\r\n    return (\r\n\r\n      <div className=\"currencies row\" >\r\n        <h1>List of all currencies</h1>\r\n        {this.state.currencies.map(currency => (\r\n          <div key={currency.currencies[0].code} class=\"column\">\r\n            <div class=\"card\">\r\n              <p>\r\n                <b>\r\n                  <img src={currency.flag} alt=\"flag\" height=\"20px\" width=\"25px\" /> {currency.currencies[0].code} {currency.currencies[0].symbol}\r\n                </b>\r\n                <br /> {currency.currencies[0].name}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    )\r\n  };\r\n}\r\n\r\nexport default Currencies;\r\n","import React, { Component } from \"react\";\r\nimport Converter from \"./Converter\";\r\nimport axios from \"axios\";\r\nimport \"./App.css\";\r\nimport Footer from \"./footer\";\r\nimport NavBar from \"./NavBar\";\r\nimport About from \"./About\";\r\nimport Support from \"./Support\";\r\nimport Currencies from \"./Currencies\";\r\nimport \"./NavBar.css\";\r\nimport { Route } from \"react-router-dom\";\r\n\r\nclass App extends Component {\r\n  state = { currencies: [] };\r\n\r\n  componentDidMount() {\r\n    axios({\r\n      method: \"get\",\r\n      url:\r\n        \"https://free.currconv.com/api/v7/currencies?apiKey=c88d0484f970be819447\"\r\n      // \"https://free.currconv.com/api/v7/currencies?apiKey=de16d9c21e2609ca2315\"\r\n      //\"https://free.currconv.com/api/v7/currencies?apiKey=80017b5a4cbbbc532a33\"\r\n    })\r\n      .then(response => {\r\n        //dropDown code\r\n        // currencies dropDown code to get the id and the currencyName from the object\r\n        let currancyData = [];\r\n        for (let currencyKey in response.data.results) {\r\n          currancyData.push(response.data.results[currencyKey]);\r\n        }\r\n        //Sorting code\r\n        //Sort currencies By the currencyName\r\n        currancyData.sort(function (a, b) {\r\n          var nameA = a.currencyName.toUpperCase(); // ignore upper and lowercase\r\n          var nameB = b.currencyName.toUpperCase(); // ignore upper and lowercase\r\n          if (nameA < nameB) {\r\n            return -1;\r\n          }\r\n          if (nameA > nameB) {\r\n            return 1;\r\n          }\r\n          // names must be equal\r\n          return 0;\r\n        });\r\n        //Sorting code\r\n        this.setState({\r\n          currencies: currancyData\r\n          //dropDown code\r\n        });\r\n      })\r\n\r\n      .catch(error => {\r\n        console.log(\"Request failed\");\r\n      });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div id='parent'>\r\n        <NavBar />\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          render={() => <Converter currencies={this.state.currencies} />}\r\n        />\r\n        <Route\r\n          exact\r\n          path=\"/currencies\"\r\n          render={() => <Currencies currencies={this.state.currencies} />}\r\n        />\r\n        <Route exact path=\"/about\" component={About} />\r\n        <Route exact path=\"/support\" component={Support} />\r\n        <Footer />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import ReactDOM from 'react-dom';\r\nimport React from 'react';\r\nimport App from './App';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { HashRouter } from \"react-router-dom\";\r\n\r\nconst AppJsx = (\r\n    <HashRouter>\r\n        <App />\r\n    </HashRouter>\r\n)\r\nReactDOM.render(AppJsx, document.getElementById('root'));\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();"],"sourceRoot":""}